package battleships;

import java.util.ArrayList;
import java.util.ListIterator;

public class GridPacker
{    
    /**
     * The starting grid from which we calculate all the possible ship
     * configurations. Once made the grid reference is final, but we can still
     * make changes to the cases of the grid.
     */
    private final ProbabilityGrid grid;
    
    /**
     * An arraylist of GridPackers, each containing the different possible configs
     * formed by placing one more ship on the grid.
     * We use an arraylist instead of a regular array in order to save memory,
     * and for convenience, although there may be a small impact on speed.
     */
    private ArrayList<GridPacker> possibleConfigurations;
    
    GridPacker(Grid grid) {
        // set the grid
        this.grid = new ProbabilityGrid(grid);
    }
    
    Grid getGrid() {
        return this.grid;
    }
    
    ArrayList<GridPacker> getPossibleConfigurations() {
        return possibleConfigurations;
    }
    
    /**
     * Fills the possibleConfigurations ArrayList with GridPackers, each
     * containing a potential configuration that would be generated by putting
     * one new ship on the grid (in a way that obeys the rules). 
     */
    void generateConfigurations() {
        // iterate over the cases and calculate from the hits, misses etc, all
        // the UNIQUE configurations possible by placing a ship there
        for (int i = 0; i < grid.getHeight(); i++) {
            for (int j = 0; j < grid.getWidth(); j++) {
                generateLocalConfigurations(i, j);
            } 
        }
    }
    
    /**
     * Generates all the possible configurations from placing a single boat
     * starting only at the given case
     * @param row
     * @param column 
     */
    void generateLocalConfigurations(int row, int column) {
        // we cannot place any boats starting at the given case if we know
        // there has been a missed shot at its location
        ProbabilityCase pCase = (ProbabilityCase) grid.getCase(row, column);
        switch (pCase.getContents()) {
            case MISS : break;
            case UNKNOWN :
                // try all types of ship we know could possibly be there
                
                break;
            case HIT_DESTROYER :
                
                break;
            case HIT_CRUISER :
                
                break;
            case HIT_BATTLESHIP :
                
                break;
            case HIT_CARRIER :
                
                break;
            default : break;
        }
    }
    
}
